
[Переслано от Витя Кмин]
Так. Письмова таска.
Зробити свій розпоряжок дня.

Мають бути функції, які є асинхронними (мають сетТаймАут або сетІнтервал) які описують якусь певну вашу дію в день.
Наприклад функція прокинутись триває 1с, поїсти - 0,5с. Доїхати до роботи - 2с. Пообідати - 1с.
Зробити таких функцій в районі 10 штук. Функція має приймати параметр, який буде відповідати за успішне чи не успішне виконання.
Далі виконати їх в тій послідовності, в якій ви виконуєте їх у свій звичайний день.

Тобто, як приклад
Прокинулись - Поснідали - Зібрались - ПОїхали на роботу - Працююєте - Пообідали - Працюєте - Випили кави - Працюєте - Поїхали до дому - Повчились - Лягли спати.

Кожна функція має мати якесь успіше або не успішне виконання. Тобто можливий варіант, що при виконанні функції доїхати на роботу ви стали в заторі і не попали на роботу. Або йдучи на обід ви забули гаманець і лишились голодні.
***
Баночка варенья, [19-Apr-20 17:51]
[Переслано от Витя Кмин]
Маєш 2 масива з цифрами.
Любими.
Треба знайти чи перший масив має в собі квадрати іншого масиву. Порядок циферок не важливий. І якщо це так, то вивести true, якщо ні, вивести false
Наприклад
[1,2,3] [9,1,4] —> TRUE
[2,1,2] [1,1,4] —-> FALSE
[1,2,3,5] [25, 9, 1, 4, 4] ——> FALSE

Баночка варенья, [19-Apr-20 17:51]
[Переслано от Витя Кмин]
Знайти анаграму.
Маєш 2 слова
Потрібно знайти чи одне слово складається з тих самих букв шо друге. Букви перевикорситосуватись не можуть.
Ніяких пробілів, цифер і так далі. Тільки букви малого регістру

okten -> token ——> TRUE
dima -> aimd —-—> TRUE
test -> rest ——> FASLE
***

[Переслано от Витя Кмин]
/*
  Вивести масив винахідників які народились в 1500-х роках.
  Вивести масив тільки імен винахідників які народились в 1800-х роках
  Вивести масив з імен та прізвищ винахідників (['Albert Einstein', ... ])
  Відсортувати винахідників за кількістю прожитих років
  Відсортувати людей але тільки за прізвищем
  Перевірити чи є хоча б один винахідник народжений в 1878, якщо так то функція повертає true якщо ні то false
  * Знайдіть суму років які прожили всі винахідники разом
  * Знайти суму кожного типу транспорту, які є в масиві
*/

const inventors = [
 {first: 'Albert', last: 'Einstein', year: 1879, passed: 1955},
 {first: 'Isaac', last: 'Newton', year: 1643, passed: 1727},
 {first: 'Galileo', last: 'Galilei', year: 1564, passed: 1642},
 {first: 'Marie', last: 'Curie', year: 1867, passed: 1934},
 {first: 'Johannes', last: 'Kepler', year: 1571, passed: 1630},
 {first: 'Nicolaus', last: 'Copernicus', year: 1473, passed: 1543},
 {first: 'Max', last: 'Planck', year: 1858, passed: 1947},
 {first: 'Katherine', last: 'Blodgett', year: 1898, passed: 1979},
 {first: 'Ada', last: 'Lovelace', year: 1815, passed: 1852},
 {first: 'Sarah E.', last: 'Goode', year: 1855, passed: 1905},
 {first: 'Lise', last: 'Meitner', year: 1878, passed: 1968},
 {first: 'Hanna', last: 'Hammarström', year: 1829, passed: 1909}
];

const people = ['Beck, Glenn', 'Becker, Carl', 'Beckett, Samuel', 'Beddoes, Mick', 'Beecher, Henry', 'Beethoven, Ludwig',
 'Begin, Menachem', 'Belloc, Hilaire', 'Bellow, Saul', 'Benchley, Robert', 'Benenson, Peter', 'Ben-Gurion, David',
 'Benjamin, Walter', 'Benn, Tony', 'Bennington, Chester', 'Benson, Leana', 'Bent, Silas', 'Bentsen, Lloyd', 'Berger, Ric',
 'Bergman, Ingmar', 'Berio, Luciano', 'Berle, Milton', 'Berlin, Irving', 'Berne, Eric', 'Bernhard, Sandra', 'Berra, Yogi',
 'Berry, Halle', 'Berry, Wendell', 'Bethea, Erin', 'Bevan, Aneurin', 'Bevel, Ken', 'Biden, Joseph', 'Bierce, Ambrose',
 'Biko, Steve', 'Billings, Josh', 'Biondo, Frank', 'Birrell, Augustine', 'Black Elk', 'Blair, Robert', 'Blair, Tony',
 'Blake, William'];

const transport = ['car', 'car', 'truck', 'truck', 'bike', 'walk', 'car', 'van', 'bike',
 'walk', 'car', 'van', 'car', 'truck', 'pogostick'];


***
Баночка варенья, [25-Nov-21 19:46]
[Переслано от Володя Шаленый]
Пишемо програму, яка приймає строку і формує бібліотеку.
пошук в бібліотеці відбувається по автору, по назві і по році видачі книги.
строка яку приймає програма виглядає так:
"Тарас Шевченко, Кобзар, 2002р."

Баночка варенья, [25-Nov-21 19:47]
[Переслано от Сергей]
Зробитти систему яка зберігає авто в базу, знаходить всі авто, знаходить авто по ід, ввидаляє авто по ід, знаходит всі автівки з певної моделі.

Баночка варенья, [25-Nov-21 19:48]
зробити систему crud операцій з автомобілями - створити авто, видалити , оновити авто з певним ід, знайти всі авто, знайти авто з вевний ід. операції create /delete / update дозволити тільки користувачам з правами admin, операції "знайти всіх" доступні всім, операції "знайти за певним ід" доступні тільки користувачам з ролями "USER" & "ADMIN"

Баночка варенья, [25-Nov-21 19:48]
Система обліку документів.
Документ
-ід
-назва
-дата створення
-тип документу
-розмір
CRUD операції
Пошук за:
-назвою
-датою
-діапазоном дат
-типом документу
-розміром
Вивід інформації про всі документи в шаблон
Сортування виводу за назвою ,типом та розміром
Можливість перглянути детальну інформацію про документ на окремій сторінці
***
